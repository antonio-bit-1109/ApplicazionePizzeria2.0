// <auto-generated />
using System;
using ApplicazionePizzeria2._0.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApplicazionePizzeria2._0.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240314150358_AggiuntaCampoDataConsegnaAdordine")]
    partial class AggiuntaCampoDataConsegnaAdordine
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicazionePizzeria2._0.Models.DettagliOrdine", b =>
                {
                    b.Property<int>("IdDettagliOrdine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDettagliOrdine"));

                    b.Property<double?>("CostoTotale")
                        .HasColumnType("float");

                    b.Property<int>("IdOrdine")
                        .HasColumnType("int");

                    b.Property<int>("IdProdotto")
                        .HasColumnType("int");

                    b.Property<bool>("OrdineEvaso")
                        .HasColumnType("bit");

                    b.Property<double>("Prezzo")
                        .HasColumnType("float");

                    b.Property<int>("Quantita")
                        .HasColumnType("int");

                    b.HasKey("IdDettagliOrdine");

                    b.HasIndex("IdOrdine");

                    b.HasIndex("IdProdotto");

                    b.ToTable("DettagliOrdini");
                });

            modelBuilder.Entity("ApplicazionePizzeria2._0.Models.Ordine", b =>
                {
                    b.Property<int>("IdOrdine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrdine"));

                    b.Property<DateTime>("DataDellaConsegna")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUtente")
                        .HasColumnType("int");

                    b.Property<string>("NoteAggiuntive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("indirizzoSpedizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOrdine");

                    b.HasIndex("IdUtente");

                    b.ToTable("Ordini");
                });

            modelBuilder.Entity("ApplicazionePizzeria2._0.Models.Prodotto", b =>
                {
                    b.Property<int>("IdProdotto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProdotto"));

                    b.Property<string>("FotoProdotto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredienti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeProdotto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrezzoProdotto")
                        .HasColumnType("float");

                    b.Property<int>("TempoConsegna")
                        .HasColumnType("int");

                    b.HasKey("IdProdotto");

                    b.ToTable("Prodotti");
                });

            modelBuilder.Entity("ApplicazionePizzeria2._0.Models.Utente", b =>
                {
                    b.Property<int>("IdUtente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtente"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUtente");

                    b.ToTable("Utenti");
                });

            modelBuilder.Entity("ApplicazionePizzeria2._0.Models.DettagliOrdine", b =>
                {
                    b.HasOne("ApplicazionePizzeria2._0.Models.Ordine", "Ordine")
                        .WithMany("DettagliOrdini")
                        .HasForeignKey("IdOrdine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicazionePizzeria2._0.Models.Prodotto", "Prodotto")
                        .WithMany("DettagliOrdini")
                        .HasForeignKey("IdProdotto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ordine");

                    b.Navigation("Prodotto");
                });

            modelBuilder.Entity("ApplicazionePizzeria2._0.Models.Ordine", b =>
                {
                    b.HasOne("ApplicazionePizzeria2._0.Models.Utente", "Utente")
                        .WithMany("Ordini")
                        .HasForeignKey("IdUtente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("ApplicazionePizzeria2._0.Models.Ordine", b =>
                {
                    b.Navigation("DettagliOrdini");
                });

            modelBuilder.Entity("ApplicazionePizzeria2._0.Models.Prodotto", b =>
                {
                    b.Navigation("DettagliOrdini");
                });

            modelBuilder.Entity("ApplicazionePizzeria2._0.Models.Utente", b =>
                {
                    b.Navigation("Ordini");
                });
#pragma warning restore 612, 618
        }
    }
}
